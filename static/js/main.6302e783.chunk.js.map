{"version":3,"sources":["algorithms/const.ts","components/menu/Settings/Settings.tsx","components/menu/Informations/Informations.tsx","components/menu/Menu.tsx","components/bar/Bar.tsx","algorithms/bubbleSort/bubbleSort.ts","algorithms/selectionSort/selectionSort.ts","algorithms/algorithms.ts","components/graph/Graph.tsx","components/wrapper/Wrapper.tsx","App.tsx","index.tsx","components/graph/Graph.module.css","components/menu/Settings/Settings.module.css","components/menu/Informations/Informations.module.css","components/bar/Bar.module.css","components/menu/Menu.module.css"],"names":["Algorithms","value","name","complexityWorst","complexityAverage","complexityBest","description","source","Settings","settings","setSettings","className","css","wrapper","sliderWrapper","min","max","slider","onChange","x","numberOfBars","undefined","stepDuration","Informations","algorithm","information","find","alg","complexity","href","Option","Select","Menu","selectedAlgorithm","setSelectedAlgorithm","defaultValue","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","map","algo","key","content","title","trigger","shape","icon","SettingOutlined","InfoOutlined","getStyle","index","itemsLength","height","width","transform","MARGIN","transition","getClass","isSelected","defaultClass","bar","moving","Bar","style","step","items","clone","_","args","temp","algorithms","bubbleSort","bubbleSortStep","sort","arrayModified","sortedArray","queue","i","current","findIndex","next","push","length","selectionSort","selectionSortStep","firstItem","firstItemIndex","notSortedArray","filter","minimumValue","minimumIndex","reduce","acc","curr","secondItem","secondItemIndex","Graph","useState","setItems","setQueue","currentStep","setCurrentStep","sortQueue","setSortQueue","setAlgorithm","useEffect","initialItems","randomOrder","getInitialItems","_algorithm","clearSortQueue","forEach","clearTimeout","manualStep","direction","queueModifier","graph","item","toString","buttonsWrapper","buttonLine","buttonLeft","size","onClick","newItems","SyncOutlined","buttonRight","type","danger","PauseOutlined","_sortQueue","timeout","setTimeout","CaretRightOutlined","LeftOutlined","RightOutlined","stepsLeft","INITIAL_SETTINGS","sortDuration","Wrapper","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6302e783.chunk.js","sourcesContent":["import { Algorithm } from \"../types/shared.model\";\n\nexport const Algorithms: Algorithm[] = [\n  {\n    value: \"bubbleSort\",\n    name: \"Bubble Sort\",\n    complexityWorst: \"O(n^2)\",\n    complexityAverage: \"O(n^2)\",\n    complexityBest: \"O(n)\",\n    description:\n      \"Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in wrong order.\",\n    source: \"https://www.geeksforgeeks.org/bubble-sort/\",\n  },\n  {\n    value: \"selectionSort\",\n    name: \"Selection Sort\",\n    complexityWorst: \"O(n^2)\",\n    complexityAverage: \"O(n^2)\",\n    complexityBest: \"O(n^2)\",\n    description:\n      \"The selection sort algorithm sorts an array by repeatedly finding the minimum element (considering ascending order) from unsorted part and putting it at the beginning. The algorithm maintains two subarrays in a given array.\",\n    source: \"https://www.geeksforgeeks.org/selection-sort/\",\n  },\n];\n","import React from \"react\";\nimport css from \"./Settings.module.css\";\nimport { ISettings } from \"../../../types/shared.model\";\nimport { Slider, InputNumber } from \"antd\";\n\ninterface SettingsProps {\n  settings: ISettings;\n  setSettings: any;\n}\n\nconst Settings: React.FC<SettingsProps> = ({ settings, setSettings }) => {\n  return (\n    <div className={css.wrapper}>\n      <h3>Number of bars</h3>\n      <div className={css.sliderWrapper}>\n        <Slider\n          min={3}\n          max={50}\n          className={css.slider}\n          onChange={(x: number) =>\n            setSettings({ ...settings, numberOfBars: +x })\n          }\n          value={settings.numberOfBars}\n        />\n        <InputNumber\n          min={3}\n          max={50}\n          value={settings.numberOfBars}\n          onChange={(x) =>\n            setSettings({ ...settings, numberOfBars: x === undefined ? 2 : +x })\n          }\n        />\n      </div>\n\n      <h3>Duration of a step (in ms)</h3>\n      <div className={css.sliderWrapper}>\n        <Slider\n          min={1}\n          max={1000}\n          className={css.slider}\n          onChange={(x: number) =>\n            setSettings({ ...settings, stepDuration: +x })\n          }\n          value={settings.stepDuration}\n        />\n        <InputNumber\n          min={1}\n          max={1000}\n          value={settings.stepDuration}\n          onChange={(x) =>\n            setSettings({ ...settings, stepDuration: x === undefined ? 0 : +x })\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport css from \"./Informations.module.css\";\nimport { Algorithms } from \"../../../algorithms/const\";\n\ninterface InformationsProps {\n  algorithm: string;\n}\n\nconst Informations: React.FC<InformationsProps> = ({ algorithm }) => {\n  const information = Algorithms.find((alg) => alg.value === algorithm);\n\n  return information ? (\n    <div className={css.wrapper}>\n      <h1>Description</h1>\n      <p>{information.description}</p>\n      <h1>Complexity</h1>\n      <div className={css.complexity}>\n        <div>\n          <h3>Worst</h3>\n          <p>{information.complexityWorst}</p>\n        </div>\n        <div>\n          <h3>Average</h3>\n          <p>{information.complexityAverage}</p>\n        </div>\n        <div>\n          <h3>Best</h3>\n          <p>{information.complexityBest}</p>\n        </div>\n      </div>\n      <a href={information.source}>More information</a>\n    </div>\n  ) : (\n    <div>No information found</div>\n  );\n};\n\nexport default Informations;\n","import React from \"react\";\nimport css from \"./Menu.module.css\";\n\nimport { Select, Popover, Button } from \"antd\";\nimport { Algorithms } from \"../../algorithms/const\";\nimport { SettingOutlined, InfoOutlined } from \"@ant-design/icons\";\nimport { ISettings } from \"../../types/shared.model\";\nimport Settings from \"./Settings/Settings\";\nimport Informations from \"./Informations/Informations\";\n\nconst { Option } = Select;\n\ninterface MenuProps {\n  selectedAlgorithm: string;\n  setSelectedAlgorithm: any;\n  settings: ISettings;\n  setSettings: any;\n}\n\nconst Menu: React.FC<MenuProps> = ({\n  selectedAlgorithm,\n  setSelectedAlgorithm,\n  settings,\n  setSettings,\n}) => {\n  return (\n    <div className={css.wrapper}>\n      <span>\n        <Select\n          defaultValue={selectedAlgorithm}\n          showSearch\n          placeholder=\"Select a sorting algorithm\"\n          optionFilterProp=\"children\"\n          onChange={setSelectedAlgorithm}\n          filterOption={(input, option) =>\n            option!.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          }\n        >\n          {Algorithms.map((algo) => (\n            <Option key={algo.value} value={algo.value}>\n              {algo.name}\n            </Option>\n          ))}\n        </Select>\n      </span>\n      <span>\n        <Popover\n          content={<Settings settings={settings} setSettings={setSettings} />}\n          title=\"Settings\"\n          trigger=\"click\"\n        >\n          <Button shape=\"circle\" icon={<SettingOutlined />} />\n        </Popover>\n      </span>\n      <span>\n        <Popover\n          content={<Informations algorithm={selectedAlgorithm} />}\n          trigger=\"click\"\n        >\n          <Button shape=\"circle\" icon={<InfoOutlined />} />\n        </Popover>\n      </span>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport css from \"./Bar.module.css\";\n\ninterface BarProps {\n  value: number;\n  index: number;\n  isSelected: boolean;\n  itemsLength: number;\n  stepDuration: number;\n}\n\nconst MARGIN = 2;\n\nconst getStyle = (\n  value: number,\n  index: number,\n  itemsLength: number,\n  stepDuration: number\n) => {\n  return {\n    height: `${(value * 100) / itemsLength}%`,\n    width: `calc(${100 / itemsLength}% - ${MARGIN}px)`,\n    transform: `translateX(calc(${index * 100}% + ${\n      index * MARGIN + MARGIN / 2\n    }px))`,\n    transition: `transform ${stepDuration}ms linear`,\n  };\n};\n\nconst getClass = (isSelected: boolean) => {\n  const defaultClass = css.bar;\n  const moving = isSelected ? css.isSelected : \"\";\n  return `${defaultClass} ${moving}`;\n};\n\nconst Bar: React.FC<BarProps> = ({\n  value,\n  index,\n  isSelected,\n  itemsLength,\n  stepDuration,\n}) => {\n  return (\n    <div\n      style={getStyle(value, index, itemsLength, stepDuration)}\n      className={getClass(isSelected)}\n    />\n  );\n};\n\nexport default Bar;\n","import { Item } from \"../../types/shared.model\";\nimport * as _ from \"lodash\";\n\nexport const step = (items: Item[], ...args: number[]) => {\n  const clone = _.cloneDeep(items).map((x) => ({ ...x, isSelected: false }));\n  const temp = clone[args[0]].index;\n  clone[args[0]].index = clone[args[1]].index;\n  clone[args[1]].index = temp;\n  clone[args[1]].isSelected = true;\n  clone[args[0]].isSelected = true;\n\n  return clone;\n};\n\nexport const bubbleSort = (items: Item[]): any[] => {\n  let arrayModified = true;\n  let sortedArray = _.cloneDeep(items);\n  const queue = [];\n\n  while (arrayModified) {\n    arrayModified = false;\n    for (let i = 0; i < sortedArray.length; i++) {\n      const current = sortedArray.findIndex((x) => x.index === i);\n      const next = sortedArray.findIndex((x) => x.index === i + 1);\n      if (\n        sortedArray[current] !== undefined &&\n        sortedArray[next] !== undefined &&\n        sortedArray[next].value < sortedArray[current].value\n      ) {\n        sortedArray = step(sortedArray, current, next);\n        queue.push([current, next]);\n        arrayModified = true;\n      }\n    }\n  }\n  return queue;\n};\n","import { Item } from \"../../types/shared.model\";\nimport * as _ from \"lodash\";\n\nexport const step = (items: Item[], ...args: number[]) => {\n  const clone = _.cloneDeep(items).map((x) => ({ ...x, isSelected: false }));\n  const temp = clone[args[0]].index;\n  clone[args[0]].index = clone[args[1]].index;\n  clone[args[1]].index = temp;\n  clone[args[1]].isSelected = true;\n  clone[args[0]].isSelected = true;\n\n  return clone;\n};\n\nexport const selectionSort = (items: Item[]): any[] => {\n  let sortedArray = _.cloneDeep(items);\n  const queue = [];\n\n  for (let i = 0; i < sortedArray.length; i++) {\n    const firstItem = sortedArray.find((x) => x.index === i);\n    const firstItemIndex = sortedArray.findIndex((x) => x.index === i);\n    const notSortedArray = sortedArray.filter((x) => x.index > i);\n    if (firstItem) {\n      let minimumValue = firstItem.value;\n      const minimumIndex = notSortedArray.reduce((acc, curr) => {\n        if (curr.value < minimumValue) {\n          minimumValue = curr.value;\n          return curr.index;\n        }\n        return acc;\n      }, firstItem.index);\n\n      const secondItem = sortedArray.find((x) => x.index === minimumIndex);\n      const secondItemIndex = sortedArray.findIndex(\n        (x) => x.index === minimumIndex\n      );\n      if (secondItem && secondItem.value !== firstItem.value) {\n        sortedArray = step(sortedArray, firstItemIndex, secondItemIndex);\n        queue.push([firstItemIndex, secondItemIndex]);\n      }\n    }\n  }\n\n  return queue;\n};\n","import { step as bubbleSortStep, bubbleSort } from \"./bubbleSort/bubbleSort\";\nimport { AlgorithmImplementation } from \"../types/shared.model\";\nimport {\n  step as selectionSortStep,\n  selectionSort,\n} from \"./selectionSort/selectionSort\";\n\nexport const algorithms = {\n  bubbleSort: {\n    step: bubbleSortStep,\n    sort: bubbleSort,\n  } as AlgorithmImplementation,\n  selectionSort: {\n    step: selectionSortStep,\n    sort: selectionSort,\n  } as AlgorithmImplementation,\n};\n","import React, { useState, useEffect } from \"react\";\nimport * as _ from \"lodash\";\nimport Bar from \"../bar/Bar\";\nimport css from \"./Graph.module.css\";\nimport {\n  Item,\n  AlgorithmImplementation,\n  ISettings,\n} from \"../../types/shared.model\";\nimport { algorithms } from \"../../algorithms/algorithms\";\nimport { Button } from \"antd\";\nimport {\n  SyncOutlined,\n  CaretRightOutlined,\n  RightOutlined,\n  LeftOutlined,\n  PauseOutlined,\n} from \"@ant-design/icons\";\n\ninterface GraphProps {\n  selectedAlgorithm: string;\n  settings: ISettings;\n}\n\nconst getInitialItems = (numberOfBars: number) => {\n  const items = [];\n  for (let i = 1; i <= numberOfBars; i++) {\n    items.push({ value: i, index: i - 1 });\n  }\n  const randomOrder = _.shuffle(items.map((x) => x.index));\n  return items.map((x, i) => ({ ...x, index: randomOrder[i] }));\n};\n\nconst Graph: React.FC<GraphProps> = ({ selectedAlgorithm, settings }) => {\n  const [items, setItems] = useState<Item[]>([]);\n  const [queue, setQueue] = useState<any>([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [sortQueue, setSortQueue] = useState<NodeJS.Timeout[]>([]);\n  const [algorithm, setAlgorithm] = useState<AlgorithmImplementation>(\n    algorithms[selectedAlgorithm as keyof typeof algorithms]\n  );\n\n  useEffect(() => {\n    const initialItems = getInitialItems(settings.numberOfBars);\n    const _algorithm = algorithms[selectedAlgorithm as keyof typeof algorithms];\n    setAlgorithm(_algorithm);\n    setItems(initialItems);\n    setQueue(_algorithm.sort(initialItems));\n    setCurrentStep(0);\n    clearSortQueue();\n  }, [selectedAlgorithm, settings.numberOfBars]);\n\n  useEffect(() => {\n    clearSortQueue();\n  }, [settings.stepDuration]);\n\n  const clearSortQueue = () => {\n    sortQueue.forEach((x) => clearTimeout(x));\n    setSortQueue([]);\n  };\n\n  const shuffle = () => {\n    const randomOrder = _.shuffle(items.map((x) => x.index));\n    const newItems = items.map((x, i) => ({\n      ...x,\n      index: randomOrder[i],\n      isSelected: false,\n    }));\n    setQueue(algorithm.sort(newItems));\n    setCurrentStep(0);\n    setItems(newItems);\n    clearSortQueue();\n  };\n\n  const sort = () => {\n    let sortedArray = items;\n    const _sortQueue = [];\n    for (let i = currentStep; i < queue.length; i++) {\n      const timeout = setTimeout(() => {\n        sortedArray = algorithm.step(sortedArray, ...queue[i]);\n        setItems(sortedArray);\n        setCurrentStep(i + 1);\n        if (i === queue.length - 1) {\n          setSortQueue([]);\n        }\n      }, (i - currentStep) * settings.stepDuration);\n      _sortQueue.push(timeout);\n    }\n    setSortQueue(_sortQueue);\n  };\n\n  const manualStep = (direction: number) => {\n    const queueModifier = direction === -1 ? -1 : 0;\n    if (queue[currentStep + queueModifier]) {\n      let sortedArray = items;\n\n      sortedArray = algorithm.step(\n        sortedArray,\n        ...queue[currentStep + queueModifier]\n      );\n      setCurrentStep(currentStep + direction);\n      setItems(sortedArray);\n    }\n  };\n\n  const pause = () => {\n    clearSortQueue();\n  };\n\n  const next = () => {\n    manualStep(1);\n  };\n\n  const back = () => {\n    manualStep(-1);\n  };\n\n  return (\n    <>\n      <div className={css.graph}>\n        {items.map((item) => (\n          <Bar\n            index={item.index}\n            value={item.value}\n            itemsLength={items.length}\n            isSelected={!!item.isSelected}\n            stepDuration={settings.stepDuration}\n            key={item.value.toString()}\n          />\n        ))}\n      </div>\n      <div className={css.buttonsWrapper}>\n        <div className={css.buttonLine}>\n          <div className={css.buttonLeft}>\n            <Button size=\"large\" onClick={shuffle} icon={<SyncOutlined />}>\n              Shuffle\n            </Button>\n          </div>\n          <div className={css.buttonRight}>\n            {sortQueue.length ? (\n              <Button\n                onClick={pause}\n                type=\"primary\"\n                danger\n                size=\"large\"\n                icon={<PauseOutlined />}\n              >\n                Pause\n              </Button>\n            ) : (\n              <Button\n                size=\"large\"\n                onClick={sort}\n                type=\"primary\"\n                icon={<CaretRightOutlined />}\n              >\n                Sort\n              </Button>\n            )}\n          </div>\n        </div>\n        <div className={css.buttonLine}>\n          <div className={css.buttonLeft}>\n            <Button onClick={back} icon={<LeftOutlined />}>\n              Undo last swap\n            </Button>\n          </div>\n          <div className={css.buttonRight}>\n            <Button onClick={next}>\n              Swap one\n              <RightOutlined />\n            </Button>\n          </div>\n        </div>\n      </div>\n      <div className={css.stepsLeft}>\n        <span>Swaps left: {queue.length - currentStep}</span>\n      </div>\n    </>\n  );\n};\n\nexport default Graph;\n","import React, { useState } from \"react\";\nimport Menu from \"../menu/Menu\";\nimport Graph from \"../graph/Graph\";\nimport { Algorithms } from \"../../algorithms/const\";\nimport { ISettings } from \"../../types/shared.model\";\n\nconst INITIAL_SETTINGS: ISettings = {\n  numberOfBars: 20,\n  stepDuration: 200,\n  sortDuration: 5000,\n};\n\nconst Wrapper: React.FC<any> = () => {\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(\n    Algorithms[0].value\n  );\n  const [settings, setSettings] = useState(INITIAL_SETTINGS);\n\n  return (\n    <main>\n      <Menu\n        selectedAlgorithm={selectedAlgorithm}\n        setSelectedAlgorithm={setSelectedAlgorithm}\n        settings={settings}\n        setSettings={setSettings}\n      />\n      <Graph settings={settings} selectedAlgorithm={selectedAlgorithm} />\n    </main>\n  );\n};\n\nexport default Wrapper;\n","import React from \"react\";\nimport Wrapper from \"./components/wrapper/Wrapper\";\nimport \"antd/dist/antd.css\";\n\nfunction App() {\n  return <Wrapper />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"Graph_graph__OgXF4\",\"buttonsWrapper\":\"Graph_buttonsWrapper__2746y\",\"buttonLine\":\"Graph_buttonLine__21EiO\",\"buttonLeft\":\"Graph_buttonLeft__1pd_X\",\"buttonRight\":\"Graph_buttonRight__5KTIZ\",\"stepsLeft\":\"Graph_stepsLeft__AOIbs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Settings_wrapper__3qSaf\",\"sliderWrapper\":\"Settings_sliderWrapper__3S-UH\",\"slider\":\"Settings_slider__3rsB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Informations_wrapper__18wFE\",\"complexity\":\"Informations_complexity__yUUQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Bar_bar__WAiTx\",\"isSelected\":\"Bar_isSelected__2su_n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Menu_wrapper__1nX2N\"};"],"sourceRoot":""}